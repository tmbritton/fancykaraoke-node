---
import Button from './Button.astro'
import HoneypotField from './HoneypotField.astro'
import NonceGenerator from '../helpers/NonceGenerator'

interface Props {
  method: 'POST' | 'GET'
  action: string
  fieldLabel: string
  placeholder: string
  buttonLabel: string
  partyId?: string
  partyIdError?: boolean
}

const {method, action, fieldLabel, placeholder, buttonLabel, partyId, partyIdError = false} = Astro.props
const ts = Date.now();
const formNonce = NonceGenerator.generateNonce([ts]);
---

<form method={method} action={action}>
  <div class="field-wrap">
    { partyId ? 
      <input type="hidden" name="party-name" value={partyId} />
    :
      <label for="party-id">{fieldLabel}</label>
      <input
        type="text"
        name="party-name"
        placeholder={placeholder}
        id="party-id"
        required
        minlength="2"
        value={partyId || ''}
        class={`${partyIdError ? 'error' : ''}`}
      />
    }
    {partyIdError ? 
      <label for="party-id" class="error">There is no party with that id.</label>
    : null}
    <input type="hidden" name="timestamp" value={ts} />
    <input type="hidden" name="nonce" value={formNonce} />
  </div>  
  
  <div class="field-wrap">
    <slot></slot>
  </div>

  <HoneypotField />
  <div class="button-wrap">
    <Button
      className="submit-button"
      type="submit"
      id="party-submit"
      name="submit"
    >
      {buttonLabel}
    </Button>
  </div>
</form>

<style>
  input[type="text"] {
    width: 100%;
  }
  .field-wrap {
    margin-bottom: 1rem;
  }
  .button-wrap {
    display: flex;
    position: relative;
  }
  .submit-button {
    margin-left: auto;
  }
</style>
