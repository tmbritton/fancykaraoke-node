---
interface Props {
  id: string;
  type?: 'button' | 'submit' | 'reset';
  disabled?: boolean;
  role?: string;
  name: string;
  variant?: 'primary' | 'secondary' | 'tab';
  selected?: boolean;
  controls?: string;
  hxGet?: string;
  hxSelect?: string;
  hxTarget?: string;
  hxSwap?: string;
  href?: string;
  hxPushUrl?: string
}

const {
  id,
  type = 'button',
  disabled = false,
  role = 'button',
  name = '',
  variant = 'primary',
  selected = false,
  controls,
  hxGet,
  hxSelect,
  hxTarget,
  hxSwap,
  href,
  hxPushUrl
} = Astro.props;

const commonProps = {
  id,
  class: `button button-${variant} ${disabled ? `button-${variant}-disabled` : ''} ${selected ? `button-${variant}-selected` : ''}`,
  'aria-role': role,
  'aria-controls': controls,
  name,
  'aria-selected': selected,
  'hx-get': hxGet,
  'hx-target': hxTarget,
  'hx-select': hxSelect,
  'hx-swap': hxSwap,
  'hx-push-url': hxPushUrl
};
---

{href ? (
  <a {...commonProps} href={href} data-astro-prefetch>
    <slot />
  </a>
) : (
  <button {...commonProps} type={type} disabled={disabled}>
    <slot />
  </button>
)}

<style>
  .button {
    font-family: var(--font-body);
    font-weight: var(--font-weight-bold);
    transition: color .2s ease-in-out, background-color .2s ease-in-out; border-color: .2s ease-in-out;
  }

  .button:hover:not(:disabled) {
    cursor: pointer;
  }

  .button-primary {
    color: var(--primary);
    border: 3px solid var(--primary);
    padding: .25rem;
    background: transparent;
  }
  .button-primary:hover {
    cursor: pointer;
    color: var(--magenta02);
    border-color: var(--magenta02);
  }
  .button-primary-disabled {
    cursor: not-allowed;
    color: var(--grey03);
    border-color: var(--grey03);
    background-color: var(--grey01);
  }

  .button-tab {
    background-color: var(--bruise04);
    border: 0 none;
    border-radius: 10px 10px 0 0;
    color: var(--bruise02);
    width: 100%;
  }
  .button-tab-selected {
    background-color: var(--primary);
    color: var(--white);
  }
</style>
