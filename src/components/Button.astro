---
interface Props {
  id: string;
  className?: string;
  type?: 'button' | 'submit' | 'reset';
  disabled?: boolean;
  role?: string;
  name: string;
  variant?: 'primary' | 'tertiary' | 'tab';
  selected?: boolean;
  controls?: string;
  hxGet?: string;
  hxSelect?: string;
  hxTarget?: string;
  hxSwap?: string;
  href?: string;
  hxPushUrl?: string;
  hxTrigger?: string;
  hxPost?: string;
  hxInclude?: string;
  hxConfirm?: string;
}

const {
  id,
  className = '',
  type = 'button',
  disabled = false,
  role = 'button',
  name = '',
  variant = 'primary',
  selected = false,
  controls,
  hxGet,
  hxSelect,
  hxTarget,
  hxSwap,
  href,
  hxPushUrl,
  hxTrigger,
  hxPost,
  hxInclude,
  hxConfirm
} = Astro.props;

const commonProps = {
  id,
  class: `button button-${variant} ${disabled ? `button-${variant}-disabled` : ''} ${selected ? `button-${variant}-selected` : ''} ${className}`,
  'aria-role': role,
  'aria-controls': controls,
  name,
  'aria-selected': selected,
  'hx-get': hxGet,
  'hx-target': hxTarget,
  'hx-select': hxSelect,
  'hx-swap': hxSwap,
  'hx-push-url': hxPushUrl,
  'hx-trigger': hxTrigger,
  'hx-post': hxPost,
  'hx-include': hxInclude,
  'hx-confirm': hxConfirm
};
---

{href ? (
  <a {...commonProps} href={href} data-astro-prefetch>
    <slot />
  </a>
) : (
  <button {...commonProps} type={type} disabled={disabled}>
    <slot />
  </button>
)}

<style>
  .button {
    font-family: var(--font-body);
    transition: color .1s ease-in-out, background-color .1s ease-in-out, border-color .1s ease-in-out;
    padding: .5rem 3rem .5rem .5rem;
    border: 0 none;
    min-width: 10rem;
    text-align: left;
    &:focus-visible {
      outline: 2px solid var(--white);
      outline-offset: -2px;
    }
  }

  .button:hover:not(:disabled) {
    cursor: pointer;
  }

  .button-primary {
    color: var(--white);
    background-color: var(--primary);
  }
  .button-primary:hover:not(:disabled) {
    cursor: pointer;
    background-color: var(--magenta02);
  }
  .button-primary-disabled {
    cursor: not-allowed;
    color: var(--grey03);
    background-color: var(--grey01);
  }

  .button-tertiary {
    color: var(--white);
    border: 2px solid var(--white);
    background-color: transparent;
  }
  .button-tertiary:hover:not(:disabled) {
    background-color: var(--white);
    color: var(--primary);
  }
  .button-tertiary-disabled {
    cursor: not-allowed;
    opacity: .7;
  }

  .button-tab {
    background-color: var(--grey05);
    padding: .5rem 1.5rem;
    border: 0 none;
    color: var(--grey02);
    border-top: 2px solid var(--grey04);
    &:hover {
      background-color: var(--grey);
    }
  }
  .button-tab-selected {
    background-color: var(--grey);
    color: var(--white);
    border-top: 2px solid var(--primary);
  }
</style>
