---
import HeadMeta from '../components/HeadMeta.astro';
import HostFooter from '../components/HostFooter.astro';
import HostHeader from '../components/HostHeader.astro';

interface Props {
	title: string;
	partyId: string;
}

const { title, partyId } = Astro.props;
import '../styles/global.css';

---
<!doctype html>
<html lang="en">
	<HeadMeta title={title} />
	<body hx-boost>
		<HostHeader />
		<main class="hostMain">
			<div class="videoPane">
				<slot name="video"/>
			</div>
			<div class="sidePane">
				<slot name="side" />
			</div>
		</main>
		<HostFooter partyId={partyId} />
		<script src="https://unpkg.com/htmx.org@1.9.9" integrity="sha384-QFjmbokDn2DjBjq+fM+8LUIVrAgqcNW2s0PjAxHETgRn9l4fvX31ZxDxvwQnyMOX" crossorigin="anonymous"></script>
		<script src="https://unpkg.com/htmx.org@1.9.11/dist/ext/sse.js"></script>
	</body>
</html>

<style>
	.hostMain {
		display: flex;
		flex-direction: row;
		padding: 1.5rem 2rem;
	}
	.videoPane {
		width: 75%;
		margin-right: 2rem;
	}
	.sidePane {
		width: 25%;
		padding: 0 1.5rem;
    max-height: calc(100vh - 150px - 65px - 50px);
    overflow-y: auto;
	}
</style>

<script>
	// 2. This code loads the IFrame Player API code asynchronously.
	const tag = document.createElement('script');

	tag.src = "https://www.youtube.com/iframe_api";
	var firstScriptTag = document.getElementsByTagName('script')[0];
	firstScriptTag?.parentNode?.insertBefore(tag, firstScriptTag);

	let player;
	// @ts-ignore
	window.onYouTubeIframeAPIReady = function () {
		// @ts-ignore
		player = new YT.Player('ytPlayer', {
			events: {
				'onStateChange': onPlayerStateChange
			}
		});
	}

	function onPlayerStateChange(event) {
		// @ts-ignore
		if (event.data === YT?.PlayerState?.ENDED) {
			const event = new Event('videoEnd');
			document.body.dispatchEvent(event)
		}
	}

</script>

<script type="text/javascript" src="/js/handleQueueUpdates.js"></script>